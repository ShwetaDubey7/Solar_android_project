// Generated by view binder compiler. Do not edit!
package com.solaro.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.solaro.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListItemInstallationBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialButton btnDelete;

  @NonNull
  public final MaterialButton btnUpdateStatus;

  @NonNull
  public final TextView tvInstallAddress;

  @NonNull
  public final TextView tvInstallStatus;

  private ListItemInstallationBinding(@NonNull MaterialCardView rootView,
      @NonNull MaterialButton btnDelete, @NonNull MaterialButton btnUpdateStatus,
      @NonNull TextView tvInstallAddress, @NonNull TextView tvInstallStatus) {
    this.rootView = rootView;
    this.btnDelete = btnDelete;
    this.btnUpdateStatus = btnUpdateStatus;
    this.tvInstallAddress = tvInstallAddress;
    this.tvInstallStatus = tvInstallStatus;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ListItemInstallationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListItemInstallationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.list_item_installation, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListItemInstallationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnDelete;
      MaterialButton btnDelete = ViewBindings.findChildViewById(rootView, id);
      if (btnDelete == null) {
        break missingId;
      }

      id = R.id.btnUpdateStatus;
      MaterialButton btnUpdateStatus = ViewBindings.findChildViewById(rootView, id);
      if (btnUpdateStatus == null) {
        break missingId;
      }

      id = R.id.tvInstallAddress;
      TextView tvInstallAddress = ViewBindings.findChildViewById(rootView, id);
      if (tvInstallAddress == null) {
        break missingId;
      }

      id = R.id.tvInstallStatus;
      TextView tvInstallStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvInstallStatus == null) {
        break missingId;
      }

      return new ListItemInstallationBinding((MaterialCardView) rootView, btnDelete,
          btnUpdateStatus, tvInstallAddress, tvInstallStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
